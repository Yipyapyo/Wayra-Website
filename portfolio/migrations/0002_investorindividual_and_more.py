# Generated by Django 4.1.2 on 2023-02-21 19:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestorIndividual',
            fields=[
                ('individual_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portfolio.individual')),
                ('NumberOfPortfolioCompanies', models.PositiveIntegerField()),
                ('NumberOfPersonalInvestments', models.PositiveIntegerField()),
                ('NumberOfPartnerInvestments', models.PositiveIntegerField()),
                ('PartOfIncubator', models.BooleanField()),
                ('NumberOfExits', models.PositiveIntegerField()),
            ],
            bases=('portfolio.individual',),
        ),
        migrations.RenameModel(
            old_name='Portfolio_Company',
            new_name='PortfolioCompany',
        ),
        migrations.AlterField(
            model_name='individual',
            name='isFounder',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='InvestorCompany',
            fields=[
                ('company_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portfolio.company')),
                ('AngelListLink', models.URLField(verbose_name='Angellist link')),
                ('CrunchbaseLink', models.URLField(verbose_name='Crunchbase link')),
                ('LinkedInLink', models.URLField(verbose_name='Linkedin link')),
                ('Type', models.CharField(choices=[('VENTURE_CAPITAL', 'Venture Capital'), ('PRIVATE_EQUITY_FIRM', 'Private Equity Firm'), ('ACCELERATOR', 'Accelerator'), ('INVESTMENT_PARTNER', 'Investment Partner'), ('CORPORATE_VENTURE_CAPITAL', 'Corporate Venture Capital'), ('MICRO_VC', 'Micro VC'), ('ANGEL_GROUP', 'Angel Group'), ('INCUBATOR', 'Incubator'), ('INVESTMENT_BANK', 'Investment Bank'), ('FAMILY_INVESTMENT_OFFICE', 'Family Investment Office'), ('VENTURE_DEBT', 'Venture Debt'), ('CO_WORKING_SPACE', 'Co-Working Space'), ('FUND_OF_FUNDS', 'Fund Of Funds'), ('HEDGE_FUND', 'Hedge Fund'), ('GOVERNMENT_OFFICE', 'Government Office'), ('UNIVERSITY_PROGRAM', 'University Program'), ('ENTREPRENEURSHIP_PROGRAM', 'Entrepreneurship Program'), ('SECONDARY_PURCHASER', 'Secondary Purchaser'), ('STARTUP_COMPETITION', 'Startup Competition'), ('SYNDICATE', 'Syndicate'), ('PENSION_FUNDS', ' Pension Funds')], default='VC', max_length=50)),
                ('NumberOfInvestments', models.PositiveIntegerField()),
                ('NumberOfLeadInvestments', models.PositiveIntegerField()),
                ('NumberOfDiversityInvestments', models.PositiveIntegerField()),
                ('NumberOfExits', models.PositiveIntegerField()),
                ('InvestedCompanies', models.ManyToManyField(related_name='companies', to='portfolio.company')),
            ],
            bases=('portfolio.company',),
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeOfFoundingRounds', models.CharField(choices=[('Seed round', 'Seed round'), ('Series A', 'Series A'), ('Series B', 'Series B'), ('Series C', 'Series C'), ('Coporate round', 'Coporate round'), ('Convertible note', 'Convertible note'), ('Venture round', 'Venture round'), ('Debt financing', 'Debt financing'), ('Post-IPO Equity', 'Post-IPO Equity')], max_length=50)),
                ('moneyRaised', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='In millions')),
                ('dateInvested', models.DateField(validators=[django.core.validators.MaxValueValidator(limit_value=django.utils.timezone.now)])),
                ('individualInvestor', models.ManyToManyField(related_name='IndividualInvestor', to='portfolio.investorindividual')),
                ('investor', models.ManyToManyField(related_name='investor', to='portfolio.investorcompany')),
                ('startup', models.ManyToManyField(related_name='startup', to='portfolio.company')),
            ],
        ),
    ]
